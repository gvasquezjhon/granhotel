# granhotel/backend/.env.example

# PostgreSQL Settings
POSTGRES_USER=gran_hotel_user
POSTGRES_PASSWORD=a_very_strong_and_secure_password # Please change this in your .env file
POSTGRES_DB=granhoteldb
POSTGRES_HOST=db # Service name in docker-compose
POSTGRES_PORT=5432

# Backend Application Settings
# The DATABASE_URL is constructed from the PostgreSQL settings above.
# It should look like: postgresql://<USER>:<PASSWORD>@<HOST>:<PORT>/<DB_NAME>
DATABASE_URL=postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@${POSTGRES_HOST}:${POSTGRES_PORT}/${POSTGRES_DB}

# API Settings
API_V1_STR=/api/v1
PROJECT_NAME="Gran Hotel API (Dev)"

# Localization and Timezone Settings
DEFAULT_LANGUAGE="es_PE"
TIMEZONE="America/Lima"

# CORS Settings: Comma-separated list of allowed origins, or "*" for all.
# Example for a frontend running on localhost:3000: http://localhost:3000,http://127.0.0.1:3000
CORS_ORIGINS="*"

# JWT Settings (Generate strong random keys for actual use)
# SECRET_KEY=your_super_secret_random_key_for_jwt
# REFRESH_SECRET_KEY=your_super_secret_random_key_for_refresh_jwt
# ACCESS_TOKEN_EXPIRE_MINUTES=30
# REFRESH_TOKEN_EXPIRE_DAYS=7
# ALGORITHM=HS256
